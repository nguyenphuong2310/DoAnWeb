#pragma checksum "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\Admin\Chart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "75bfda0cb59784e1452357c89c68e6f323e0046a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Chart), @"mvc.1.0.view", @"/Views/Admin/Chart.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\_ViewImports.cshtml"
using HaiSan;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\_ViewImports.cshtml"
using HaiSan.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75bfda0cb59784e1452357c89c68e6f323e0046a", @"/Views/Admin/Chart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"65ac9318954244554f7f38e524e4bfb3e204f6b0", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Chart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<HaiSan.Models.View.ThongKe>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\Admin\Chart.cshtml"
   Layout = "_AdminManager"; 

#line default
#line hidden
#nullable disable
            DefineSection("Link", async() => {
                WriteLiteral(@"

    <!-- Custom fonts for this template-->
    <link href=""/admin/vendor/fontawesome-free/css/all.min.css"" rel=""stylesheet"" type=""text/css"">
    <link href=""https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i""
          rel=""stylesheet"">

    <!-- Custom styles for this template-->
    <link href=""/admin/css/sb-admin-2.min.css"" rel=""stylesheet"">
");
            }
            );
            WriteLiteral("\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <!-- Page level plugins -->
    <script src=""/admin/vendor/chart.js/Chart.min.js""></script>
    <!-- Page level custom scripts -->
    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,""Segoe UI"",Roboto,""Helvetica Neue"",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
   ");
                WriteLiteral(@"             toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }


        // Area Chart Example
        var ctx = document.getElementById(""myAreaChart"");
        var config = {
            type: 'line',
            data: {
                labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                datasets: [{
                    label: ""Kiếm được"",
                    lineTension: 0.3,
                  ");
                WriteLiteral(@"  backgroundColor: ""rgba(78, 115, 223, 0.05)"",
                    borderColor: ""rgba(78, 115, 223, 1)"",
                    pointRadius: 3,
                    pointBackgroundColor: ""rgba(78, 115, 223, 1)"",
                    pointBorderColor: ""rgba(78, 115, 223, 1)"",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: ""rgba(78, 115, 223, 1)"",
                    pointHoverBorderColor: ""rgba(78, 115, 223, 1)"",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    data: []
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'dat");
                WriteLiteral(@"e'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return 'đ' + number_format(value);
                            }
                        },
                        gridLines: {
                            color: ""rgb(234, 236, 244)"",
                            zeroLineColor: ""rgb(234, 236, 244)"",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [");
                WriteLiteral(@"2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: ""rgb(255,255,255)"",
                    bodyFontColor: ""#858796"",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': đ' + number_format(tooltipItem.yLabel);
                     ");
                WriteLiteral("   }\n                    }\n                }\n            }\n        };\n        for (let i = 0; i < 13; i++) {\n            config.data.datasets[0].data[i] = 0;\n        }\n");
#nullable restore
#line 141 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\Admin\Chart.cshtml"
         foreach(var e in Model)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral("            ");
                WriteLiteral("config.data.datasets[0].data[");
#nullable restore
#line 143 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\Admin\Chart.cshtml"
                                      Write(e.Thang);

#line default
#line hidden
#nullable disable
                WriteLiteral("] = ");
#nullable restore
#line 143 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\Admin\Chart.cshtml"
                                                  Write(e.Total);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n");
#nullable restore
#line 144 "C:\Users\Admin\Documents\HaiSan_Jay\DoAnWeb\HaiSan\HaiSan\Views\Admin\Chart.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("        var myLineChart = new Chart(ctx, config);\n\n    </script>\n");
            }
            );
            WriteLiteral(@"
<!-- Begin Page Content -->
<div class=""container-fluid"">

    <!-- Page Heading -->
    <h1 class=""h3 mb-2 text-gray-800"">Thống kê theo tháng</h1>


    <!-- Content Row -->
    <div class=""row"">

        <div class=""col-xl-8 col-lg-7"">

            <!-- Area Chart -->
            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Biểu đồ</h6>
                </div>
                <div class=""card-body"">
                    <div class=""chart-area"">
                        <canvas id=""myAreaChart""></canvas>
                    </div>
                    <hr>
                </div>
            </div>


        </div>

    </div>

</div>
<!-- /.container-fluid -->
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<HaiSan.Models.View.ThongKe>> Html { get; private set; }
    }
}
#pragma warning restore 1591
